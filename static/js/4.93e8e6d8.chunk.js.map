{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","to","id","activeClassName","s","active","className","link","dialog","src","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","sendButton","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","compose","connect","state","dispatch","addMessageAction","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,8B,6FCepOC,EAZI,SAACC,GAChB,OACI,cAAC,IAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,gBAAiBC,IAAEC,OAAQC,UAAWF,IAAEG,KAA7E,SACI,sBAAKD,UAAWF,IAAEI,OAAlB,UACI,qBACIC,IAAI,wJACPT,EAAMU,WCDRC,EANC,SAACX,GACb,OACI,qBAAKM,UAAWF,IAAEQ,QAAlB,SAA4BZ,EAAMY,W,gCCIpCC,EAAcC,YAAiB,IAuC/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAAChB,GACpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAM,iBAAkBe,YAAa,yBAExG,qBAAKnB,UAAWF,IAAEsB,WAAlB,SACI,0DAQDC,EAvCC,SAAC3B,GACb,IAAI4B,EAAkB5B,EAAM6B,YAAYC,QACnCC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMR,GAAI8B,EAAE9B,IAAS8B,EAAE9B,OAErD+B,EAAmBjC,EAAM6B,YAAYK,SACpCH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAEjC,OAMlD,OACI,sBAAKI,UAAWF,IAAE0B,QAAlB,UACI,qBAAKxB,UAAWF,IAAEgC,aAAlB,SACKR,IAEL,sBAAKtB,UAAWF,IAAE8B,SAAlB,UACKD,EACD,cAAClB,EAAD,CAAqBG,SAXb,SAACmB,GACjBrC,EAAMsC,WAAWD,EAAOE,0B,wBCEjBC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHb,YAAaa,EAAMb,gBAIF,SAACc,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,EAASC,YAAiBL,SAOlCM,IAFWL,CAGbb","file":"static/js/4.93e8e6d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2r7hN\",\"dialogsItems\":\"Dialogs_dialogsItems__2pkWL\",\"messages\":\"Dialogs_messages__2nGbk\",\"link\":\"Dialogs_link__3-bvt\",\"active\":\"Dialogs_active__1of0z\",\"dialog\":\"Dialogs_dialog__3rnF6\",\"sendButton\":\"Dialogs_sendButton__1fcg-\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n        <NavLink to={'/dialogs/' + props.id} activeClassName={s.active} className={s.link}>\r\n            <div className={s.dialog}>\r\n                <img\r\n                    src='https://images.unsplash.com/photo-1529665253569-6d01c0eaf7b6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80' />\r\n                {props.name}\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs\r\n        .map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n\r\n    let messagesElements = props.dialogsPage.messages\r\n        .map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name={\"newMessageBody\"} placeholder={\"Enter your message\"} />\r\n            </div>\r\n            <div className={s.sendButton}>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import {addMessageAction} from \"../../Redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageAction(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}