{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Posts/Post/Post.js","components/Profile/Posts/Posts.js","components/Profile/Posts/PostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","userId","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData","profile","fullName","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","className","s","ProfileInfo","isOwner","savePhoto","descriptionBlock","src","photos","large","userPhoto","type","target","files","length","Preloader","Post","item","message","like","numberOfLike","maxLength10","maxLengthCreator","Posts","memo","postsElements","posts","p","id","postsBlock","AddPostFormRedux","onSubmit","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","PostsContainer","profilePage","dispatch","addPostCreateAction","Profile","ProfileContainer","match","params","authorizedId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.a9ea06b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3sXU4\",\"contacts\":\"ProfileInfo_contacts__348KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Posts_postsBlock__37snL\",\"posts\":\"Posts_posts__1BCev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1NhGN\",\"like\":\"Post_like__2EDue\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <>\r\n        {!editMode &&\r\n        <div>\r\n            <b>Status</b>: <span onDoubleClick={!props.userId && activateEditMode}>{props.status || '-----'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                   value={status}/>\r\n        </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/user.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, userId}) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n\r\n    if(!profile)\r\n        return <Preloader/>\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n            <ProfileData profile={profile} />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} userId={userId}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return <div>\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        <div>\r\n            <b>Professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b className={s.contacts}>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img\r\n            src='https://images.unsplash.com/photo-1529665253569-6d01c0eaf7b6?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZmlsZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80'/>\r\n        {props.message}\r\n        <div className={s.like}>{props.numberOfLike} Like</div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React, {useEffect, useState} from 'react';\r\nimport s from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Posts = React.memo( (props) => {\r\n    let postsElements = props.posts\r\n        .map(p => <Post numberOfLike={p.numberOfLike} message={p.message} key={p.id}/>);\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddPostFormRedux onSubmit={addNewPost}/>\r\n        <div className={s.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength10]} name={\"newPostText\"}\r\n                       placeholder={'Enter post text'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add text</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"})(AddPostForm);\r\n\r\nexport default Posts;","import React from 'react';\r\nimport {addPostCreateAction} from \"../../../Redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreateAction(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo userId={props.userId}\r\n                     savePhoto={props.savePhoto}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}/>\r\n        <PostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import {withRouter} from 'react-router-dom';\r\nimport React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, updateStatus} from \"../../Redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        userId={this.props.match.params.userId}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}